{"version":3,"file":"content.js","mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://yorizon-buddy/./src/content/index.ts"],"sourcesContent":["\"use strict\";\n// Content script for the Chrome extension\n// This script runs in the context of web pages\nconsole.log('Yorizon Buddy content script loaded');\n// Function to extract page data\nfunction extractPageData() {\n    // Get the URL and title\n    const url = window.location.href;\n    const title = document.title;\n    // Extract meta tags\n    const metaTags = Array.from(document.querySelectorAll('meta[name], meta[property]'))\n        .map((meta) => {\n        const element = meta;\n        const name = element.getAttribute('name') || element.getAttribute('property') || '';\n        return { name, content: element.content };\n    })\n        .filter((meta) => meta.name && meta.content);\n    // Extract headings\n    const headings = Array.from(document.querySelectorAll('h1, h2, h3, h4, h5, h6'))\n        .map((heading) => {\n        return {\n            level: heading.tagName.toLowerCase(),\n            text: heading.textContent?.trim() || ''\n        };\n    })\n        .filter((heading) => heading.text);\n    // Extract paragraphs\n    const paragraphs = Array.from(document.querySelectorAll('p'))\n        .map((p) => p.textContent?.trim() || '')\n        .filter((text) => text);\n    // Get selected text if any\n    const selectedText = window.getSelection()?.toString().trim();\n    return {\n        url,\n        title,\n        metaTags,\n        headings,\n        paragraphs,\n        selectedText: selectedText || undefined\n    };\n}\n// Listen for messages from the extension\nchrome.runtime.onMessage.addListener((message, _sender, sendResponse) => {\n    console.log('Content script received message:', message);\n    if (message.action === 'extractData') {\n        const data = extractPageData();\n        sendResponse({ success: true, data });\n    }\n    return true; // Will respond asynchronously\n});\n// Listen for selected text\ndocument.addEventListener('mouseup', () => {\n    const selectedText = window.getSelection()?.toString();\n    if (selectedText && selectedText.trim().length > 0) {\n        chrome.runtime.sendMessage({\n            action: 'textSelected',\n            text: selectedText\n        });\n    }\n});\n"],"names":[],"sourceRoot":""}