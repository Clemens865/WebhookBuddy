# YORIZON BUDDY V1.2 - ENHANCED SPECIFICATION

## APPLICATION OVERVIEW

Yorizon Buddy V1.2 is a Chrome side panel extension designed to bridge web browsing with data processing workflows. It enables users to collect, process, and send web page data to webhooks and AI agents through four main components.

## CORE COMPONENTS

### [CRITICAL] 1. Automation System
- **Purpose**: Allow users to create categories and flows for collecting web page data and sending it to configured webhooks
- **Data Types**: HTML, text, metadata, headings, paragraphs, links, images
- **Features**:
  - Category management with hierarchy support
  - Flow configuration with webhook endpoints
  - Data type selection interface
  - External document URL integration
  - Webhook response visualization
  - Error handling and retry mechanisms
  - Rate limiting protection
  - Logging of automation activities

### [CRITICAL] 2. Prompts Management
- **Purpose**: Create, organize, and reuse text prompts
- **Features**:
  - Category-based organization system
  - Template variables support (e.g., {selected_text}, {url}, {title})
  - Prompt insertion into messages or automation flows
  - Export/import functionality (JSON format)
  - Version history for prompts
  - Search and filtering capabilities
  - Character/token count visualization

### [CRITICAL] 3. Agent System
- **Purpose**: Integrate with LLM agents and webhook agents
- **Features**:
  - Chat interface for conversations
  - Support for OpenAI API integration
  - Custom webhook agent configuration
  - Message composition with:
    - Text messages
    - Page content
    - Selected text
    - Images (with optional compression)
  - Persistent chat history across sessions
  - Stream responses from supported APIs
  - Context management with token counting
  - Agent switching without losing context

### [CRITICAL] 4. Voice System
- **Purpose**: Create voice channels for recording and sending voice messages to webhooks
- **Features**:
  - Multiple voice channel configurations
  - Audio recording with visualization
  - Automatic transcription option
  - Website context inclusion (URL, title, metadata)
  - Integration with workflow tools (Make, n8n, Zapier)
  - Audio format selection (MP3, WAV, OGG)
  - Playback before sending
  - Recording quality options

## TECHNICAL ARCHITECTURE

### UI/UX Components
- **Design System**: Clean, modern interface with consistent components
- **Theme Support**: Light and dark mode with automatic system detection
- **Responsive Layout**: Adapts to different side panel widths
- **User Profile Settings**:
  - Username, email configuration
  - Language preference
  - Domain settings
  - Mission statement
  - Profile persistence via Chrome storage

### Extension Architecture
- **Background Scripts**:
  - Handle API communications
  - Manage webhook requests
  - Process background tasks
  - Listen for browser events
  - Handle authentication refreshes
  
- **Content Scripts**:
  - DOM interaction and extraction
  - Page information gathering
  - Selected text processing
  - Page screenshot capabilities
  - Event listeners for user actions
  
- **Side Panel Interface**:
  - React-based component system
  - Tab navigation between main features
  - State management using React Context or Redux
  - Lazy-loading of components for performance
  
- **Storage System**:
  - Chrome storage sync for user preferences
  - Chrome storage local for larger datasets
  - IndexedDB for chat histories and large prompt libraries
  - Encrypted storage for sensitive information (API keys)

## TECHNICAL STACK RECOMMENDATIONS

- **Frontend**:
  - React 18+ for component architecture
  - TypeScript for type safety
  - TailwindCSS for styling
  - React Router for navigation within the panel
  - DraftJS or SlateJS for rich text editing

- **State Management**:
  - React Context API for simpler states
  - Redux or Zustand for complex state management

- **API Integration**:
  - Axios for HTTP requests
  - WebSocket support for streaming responses
  - Fetch API for simpler requests

- **Storage**:
  - Chrome Storage API
  - IndexedDB (via Dexie.js)
  - LocalForage as fallback

- **Build Tools**:
  - Webpack or Vite
  - ESLint and Prettier for code quality
  - Jest for unit testing
  - Playwright for E2E testing

## SECURITY CONSIDERATIONS

- **API Key Management**:
  - Encrypt API keys in local storage
  - Implement secure input fields for sensitive data
  - Use Chrome's identity API where applicable

- **Data Transmission**:
  - Enforce HTTPS for all webhook communications
  - Implement proper CORS handling
  - Compress large payloads before transmission
  - Support for API key authentication and OAuth2

- **User Data Protection**:
  - Clear option to purge all stored data
  - Automated session timeouts
  - No tracking or analytics without explicit consent
  - Compliance with GDPR and CCPA requirements

## PERFORMANCE OPTIMIZATION

- **Data Processing**:
  - Web workers for CPU-intensive tasks
  - Pagination for large data sets
  - Incremental loading of chat history
  - Request debouncing and throttling

- **Asset Management**:
  - Lazy loading of non-critical components
  - Image optimization before transmission
  - Caching strategies for repeat requests
  - Memory management for long browser sessions

## DEPLOYMENT AND DISTRIBUTION

- **Chrome Web Store Requirements**:
  - Privacy policy documentation
  - Permission justification
  - Promotional images and description
  - Version update strategy

- **Development Workflow**:
  - CI/CD pipeline for testing and building
  - Semantic versioning
  - Beta testing program
  - Staged rollout support

## TARGET USERS

- Knowledge workers who need to extract and process web data
- Researchers collecting information from multiple sources
- Content creators requiring AI assistance with web content
- Professionals integrating web browsing with workflow tools
- Teams sharing common prompts and automation workflows

## INTEGRATION POINTS

- **Webhook Services**:
  - Make.com (formerly Integromat)
  - Zapier
  - n8n
  - Custom REST endpoints

- **AI Services**:
  - OpenAI (GPT models)
  - Ability to add custom LLM endpoints
  - Support for future AI service integration

- **Browser Features**:
  - Chrome Side Panel API
  - Chrome Storage API
  - Chrome Identity API (optional)
  - Chrome Permissions API

## ROADMAP CONSIDERATIONS

- **V1.2 Focus**: Stabilize core features, optimize performance
- **Future Versions**:
  - Team collaboration features
  - Cloud synchronization of prompts and flows
  - Advanced template system with conditional logic
  - Data extraction with custom selectors
  - Scheduled automations
  - Additional AI service integrations

## DATA MANAGEMENT

- **Data Lifecycle**:
  - Clear policies for data retention
  - User control over data persistence
  - Export functionality for all user-created content
  - Backup and restore capabilities

- **Error Handling**:
  - Comprehensive error states and user feedback
  - Graceful degradation when services are unavailable
  - Automatic retry with exponential backoff
  - Detailed logs for troubleshooting